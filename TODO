


* Shelf store: use POSIX API rather than std::fstream?
* Clarify flush semantics (add a flush call to the API)
* Add WriteHandle infrastructure, for readHandle->saveInto(writeHandle)?
* Move parseKey / parseQuery out of the source files of the CLI tools
* C API: test error handling
* C API: refactor?
  - Rename dasi_session_t to dasi_t
  - dasi_<type>_<action> vs dasi_<new/free>_<type>
  - dasi_retrieve_result_iterate vs dasi_retrieve_iterator_new
* Python API: test error handling
* Python API: script the generation of the stripped down header for cffi
* Check key validity when archiving (see test/api/test_dasi.cc)

* Should we nuke the ReferenceKey types - are they too much complexity
* A SharedString type
    - Can be used for the Keys in various Maps
    - Remove the need for the ReferenceKey types
    - Or is this made unecessary by the small-string optimisations

* Test SplitReferenceKey
* Test SplitKey

* api/Query with std::optional<> (i.e. for listing) --> can always do full match on schema
* Throw exceptions on partial/incorrect matches on schema
